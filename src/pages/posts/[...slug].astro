---
import posts from '@/content/posts'
import type { Post } from '@/content/posts'
import { render } from 'astro:content'
import PageLayout from '@/layouts/PageLayout.astro'
import Markdown from '@/components/atomic/Markdown.astro'
import PostMeta from '@/components/PostMeta.astro'
import If from '@/components/atomic/If.astro'
import InputPassword from '@/components/widget/InputPassword.astro'

export const getStaticPaths = async () =>
  posts.map((post) => ({
    params: { slug: post.id },
    props: post,
  }))
type Props = Post

const post = Astro.props
const { title, titleColor, titleIcon } = post.data
const { Content, headings } = await render(post)
---

<PageLayout {title} {titleColor} {titleIcon} asideCards={[['CardTableOfContents',{title,headings}],'CardRecentPost','CardToolbar']}>
  <hr>
  <div class="my3">
    <PostMeta post={post}/>
  </div>
  <div class="mx2">
    <Markdown>
      <If condition={!post.data.password}>
        <article><Content /><Fragment set:html={post.data.bodyJoinHtml}></article>
      </If>
      <If condition={post.data.password}>
        <InputPassword id="encrypt-password" placeholder={post.data.encrypt.placeholder}/>
        <article data-encrypt={JSON.stringify(post.data.encrypt)}><Markdown render set:html={post.data.encrypt.description}/></article>
        <script>
          import { decrypt } from '@/utils/crypt-aes256cbc'
          document.addEventListener("DOMContentLoaded",() => {
            const article = document.querySelector<HTMLElement>("article[data-encrypt]")!
            const { encryptedPostBody, keySaltHex, ivSaltHex } = JSON.parse(article.dataset.encrypt!)
            document.getElementById("encrypt-password")!.addEventListener("submit", e => {
              const passwordEl = (e.target! as HTMLInputElement& { wrong:Function, distroy:Function })
              const decrypted = decrypt(passwordEl.value, encryptedPostBody!, keySaltHex!, ivSaltHex!)
              if (!decrypted) return passwordEl.wrong()
              passwordEl.distroy()
              article.innerHTML = decrypted
            })
          })
        </script>
      </If>
    </Markdown>
  </div>
</PageLayout>
