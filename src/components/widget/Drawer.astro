---
interface Props {
  id: string
  class?: string
}
const { id } = Astro.props
---

<div id={id + '-mask'} class="fixed inset-0 bg-black hidden z-40 duration-300"></div>

<div
  id={id}
  class="drawer fixed top-0 right-0 h-full bg-global shadow-lg transform translate-x-full transition-transform z-50 duration-300"
  class:list={Astro.props.class}
>
  <slot />
</div>

<script>
  Array.from(document.querySelectorAll('.drawer'))
    .map((e) => e as HTMLDivElement & { show: Function; hide: Function })
    .forEach((drawer) => {
      const mask = document.getElementById(drawer.id + '-mask')!
      drawer.show = () => {
        mask.style.display = 'block'
        mask.style.opacity = '0.6'
        drawer.style.transform = 'translateX(0)'
        drawer.dispatchEvent(new Event("show"))
      }
      drawer.hide = () => {
        drawer.style.transform = 'translateX(100%)'
        mask.style.opacity = '0'
        setTimeout(() => {
          mask.style.display = 'none'
          drawer.dispatchEvent(new Event("hide"))
        }, 300)
      }
      mask.onclick = () => drawer.hide()
    })
</script>
