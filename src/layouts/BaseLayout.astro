---
import '@/styles/global.scss'
import HeadFragment from '@/components/fragment/HeadFragment.astro'
import FooterFragment from '@/components/fragment/FooterFragment.astro'
import If from '@/components/atomic/If.astro'
import NavBar from '@/components/NavBar.astro'
import { SITE_INFO } from '@/config'
import { ensuredCard, type EnsuredCardParams } from '@/components/AsideCards'
import { Icon } from 'astro-icon/components'
import Drawer from '@/components/widget/Drawer.astro'
import SideBar from '@/components/SideBar.astro'
const { language: lang, title: deafultTitle } = SITE_INFO

type Props = {
  frontmatter?: Props //for .mdx layout
} & {
  subtitle?: string
  title?: string
  description?: string
  image?: string
  asideOff?: boolean,
  asideCards?: EnsuredCardParams[]
}
const {
  subtitle,
  title = subtitle ? `${subtitle} | ${deafultTitle}` : deafultTitle,
  description = '',
  image = '',
  asideOff = false,
  asideCards
} = Astro.props.frontmatter || Astro.props
---

<!DOCTYPE html>
<html {lang}>
<head>
  <HeadFragment {title} {description} {image}/>
  <slot name="head"/>
</head>
<body class="flex flex-col bg-global text-textPrim font-sans h-screen w-screen of-x-hidden">
  <header class="wfull h15 min-h15">
    <NavBar>
      <a id="drawer-sidebar-ctrl" class="ml2"><Icon class="text-2xl" name="mdi:menu"/></a>
      <script>
        //@ts-nocheck
        document.addEventListener("DOMContentLoaded", ()=> {
          const drawerSidebar = document.getElementById('drawer-sidebar')
          const htmlBody = document.documentElement.querySelector('body')
          document.getElementById('drawer-sidebar-ctrl').addEventListener("click",()=>{
            drawerSidebar.show();
            htmlBody.style.overflowY = "hidden"
          })
          drawerSidebar.addEventListener('hide',()=>{
            htmlBody.style.overflowY = ""
          })
        })
      </script>
    </NavBar>
    <Drawer id="drawer-sidebar">
      <SideBar/>
    </Drawer>
  </header>
  <main class="wfull flex-1 max-w-screen-xl mx-auto my8 flex max-w[calc(100vw-12px)]">
    <If condition={asideOff}>
      <div class="wfull animate-move-up" data-pagefind-body>
        <slot/>
      </div>
    </If>
    <If condition={!asideOff}>
      <div class="wfull hidden lg:block lg:max-w28% lg:mr2">
        <div class="sticky top-4">
          <slot name="aside">
            <aside>
              {asideCards?.map(ensuredCard).map(([Card,props]) => <Card {...props}/>)}
            </aside>
          </slot>
        </div>
      </div>
      <div class="wfull lg:max-w71% animate-move-up" data-pagefind-body>
        <slot/>
      </div>
    </If>
  </main>
  <footer class="wfull bg-normal shadow-md py8 text-center">
    <FooterFragment/>
  </footer>
</body>
</html>